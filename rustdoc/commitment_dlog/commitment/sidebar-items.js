initSidebarItems({"fn":[["b_poly","Returns (1 + chal[-1] x)(1 + chal[-2] x^2)(1 + chal[-3] x^4) … It’s “step 8: Define the univariate polynomial” of appendix A.2 of https://eprint.iacr.org/2020/499"],["b_poly_coefficients",""],["combined_inner_product","Computes the linearization of the evaluations of a (potentially split) polynomial. Each given `poly` is associated to a matrix where the rows represent the number of evaluated points, and the columns represent potential segments (if a polynomial was split in several parts). Note that if one of the polynomial comes specified with a degree bound, the evaluation for the last segment is potentially shifted to meet the proof."],["inner_prod",""],["pows","`pows(d, x)` returns a vector containing the first `d` powers of the field element `x` (from `1` to `x^(d-1)`)."],["product","Returns the product of all the field elements belonging to an iterator."],["shift_scalar","Inside the circuit, we have a specialized scalar multiplication which computes either"],["squeeze_challenge",""],["squeeze_prechallenge",""],["to_group",""]],"struct":[["BatchEvaluationProof","Contains the batch evaluation"],["Evaluation","Contains the evaluation of a polynomial commitment at a set of points."],["PolyComm","A polynomial commitment."]],"trait":[["CommitmentCurve",""]]});